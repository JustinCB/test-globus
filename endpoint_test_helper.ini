endpoint_test_helper () {
	echo "Testing Endpoints:"
	echo
	make_test_dataset >/dev/null
	wd="$PWD"
	cd $1
	./globusconnectpersonal -stop >/dev/null 2>&1
	test_ids=`globus endpoint create --personal 'test endpoint' | awk 'NR!=1{print $NF}'`
	./globusconnectpersonal -setup `echo $test_ids | awk '{print $2}'` -dir /tmp/globuscfg >/dev/null
	./globusconnectpersonal -start -dir /tmp/globuscfg -restrict-paths r/tmp/globus_test,rw/tmp/globus_test_returns -shared-paths r/tmp/globus_test,rw/tmp/globus_test_returns >/dev/null &
	while [ "`./globusconnectpersonal -status | awk 'NR==1{print $3}'`" != "connected" ]
	do
		sleep 1
		#wait for GCP to connect
	done
	cd $wd
	test_j=0
	for test_i
	do
		if [ "$test_i" = "$1" ]
		then
			true #nop/no-op
		else
			echo testing endpoint $test_j
			globus_transfer_test_helper "`echo $test_ids | awk '{print $1}'`:/tmp/globus_test/" "${test_i}:/globus_test/" "`echo $test_ids | awk '{print $1}'`:/tmp/globus_test_returns/"
			echo "done testing endpoint $test_j"
		fi
		test_j=`expr $test_j + 1`
	done
	echo
	echo tests done
	echo
	echo cleaning up
	echo removing test directory
	rm -rf /tmp/globus_test
	echo test directory removed
	echo removing test directories on endpoints
	for test_i
	do
		if [ "$test_i" != "$1" ]
		then
			globus rm -rf "${test_i}:/globus_test/"
		fi
	done
	cd $1
	echo stopping gcp
	./globusconnectpersonal -stop >/dev/null 2>&1
	echo gcp stopped
	echo deleting test endpoint
	printf "test "
	globus endpoint delete `echo $test_ids | awk '{print $1}'`
	echo removing gcp temporary config folder
	rm -rf /tmp/globuscfg
	echo gcp temporary config folder deleted
	cd $wd
	echo DONE
}
